y_new = [0.0316951641648676;0.0256237489196035;0.0174349990228332;0.00944196296312251;0.00334727695871224];
 
S_new = [13.6724599442721,13.6724599442721,-13.6724599442721,-13.6724599442721,13.6724599442721;13.6724599442721,-13.6724599442721,13.6724599442721,13.6724599442721,13.6724599442721;-13.6724599442721,-13.6724599442721,-13.6724599442721,-13.6724599442721,13.6724599442721;-13.6724599442721,-13.6724599442721,13.6724599442721,-13.6724599442721,13.6724599442721;13.6724599442721,13.6724599442721,13.6724599442721,-13.6724599442721,-13.6724599442721;-13.6724599442721,13.6724599442721,13.6724599442721,13.6724599442721,13.6724599442721];
%w = 1/13.6724599442721;

x_scale = [0.461981867160320;0.496250878062998;-1.10539921923297;-0.628640567696750;0.847209498415784;0.330228514571165];

x_rec = zeros(size(x_scale));
A = [];
res = x_scale - x_rec;
k = 1;

opts.delta = 0;
opts.tau = norm(x_scale, Inf);
opts.num_var = length(x_scale);
opts.w = 1;
opts.norm_type = Inf;
opts.is_complex = 0;

Id = @(x) x;
[x_f, S_f, c_f] = BB_operator(Id, Id, x_scale, opts);

% opts =  sdpsettings('verbose', 0, 'cachesolvers', 1);
% while norm(res)>1e-8
%     [a, n] = LMO_1d(res, Inf ,1);
%     A = [A a];
%     
%     y = sdpvar(size(A, 2), 1);
%     cost = norm(A*y - x_scale, 2)^2;
%     %F = [y >= 0, sum(y)<=1];
%     F = [norm(y, 1) <= 1];
%     
%     sol = optimize(F, cost,opts);
%     y_rec = value(y);
%     x_rec = value(A*y);
%     res =  x_scale - x_rec;    
% end